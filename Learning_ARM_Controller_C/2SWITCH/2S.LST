ARM COMPILER V2.53,  2S                                                                    12/01/15  13:47:46  PAGE 1   


ARM COMPILER V2.53, COMPILATION OF MODULE 2S
OBJECT MODULE PLACED IN 2S.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe 2S.C THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include <LPC214X.H>
    2          #include"DELAY.H"
    3            void main()
    4            {
    5   1          unsigned int I,j,a;
    6   1          IODIR0=0XFFFFFFFC;
    7   1          IODIR1=0XFFFFFFFF;
    8   1      
    9   1          while(1)
   10   1          {
   11   2          
   12   2              a=IOPIN0&0X00000003;
   13   2              while(a==0X00000001)
   14   2              {
   15   3      
   16   3                 I=0X00010000;
   17   3              for(j=0;j<=15;j++)
   18   3                  {
   19   4              
   20   4                      IOSET1=I;
   21   4                  delay_ms(50);
   22   4                      IOCLR1=I;
   23   4                      I=I<<1;
   24   4                  }
   25   3                      
   26   3                  a=IOPIN0&0X00000003;    
   27   3              }
   28   2              a=IOPIN0&0X00000003;
   29   2              while(0X00000002==a)
   30   2              {
   31   3                I=0X80000000;
   32   3              for(j=0;j<=15;j++)
   33   3                  {
   34   4                  
   35   4                      IOSET1=I;
   36   4                      delay_ms(50);
   37   4                      IOCLR1=I;
   38   4                      I=I>>1;
   39   4                  }
   40   3                      
   41   3                      a=IOPIN0&0X00000003;
   42   3          
   43   3              }
   44   2              a=IOPIN0&0X00000003;
   45   2              while(0X00000003==a)
   46   2              {
   47   3               
   48   3              
   49   3                      IOSET1=0xFFFFFFFF;
   50   3                      delay_ms(50);
   51   3                      IOCLR1=0xFFFFFFFF;
   52   3                      delay_ms(50);
   53   3                      
   54   3                    a=IOPIN0&0X00000003;
   55   3                      
   56   3                  
   57   3              }
   58   2              a=IOPIN0&0X00000003;
   59   2                  while(0X00000000==a)
ARM COMPILER V2.53,  2S                                                                    12/01/15  13:47:46  PAGE 2   

   60   2              {
   61   3               
   62   3                      
   63   3                      IOCLR1=0xFFFFFFFF;
   64   3                      
   65   3                      a=IOPIN0&0X00000003;    
   66   3                  
   67   3                      
   68   3                  
   69   3              }
   70   2                      
   71   2      
   72   2      
   73   2          }
   74   1          }
ARM COMPILER V2.53,  2S                                                                    12/01/15  13:47:46  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         delay_us?T
 PUBLIC         delay_ms?T
 PUBLIC         main



*** CODE SEGMENT '?PR?delay_us?T?2S':
    1: void delay_us(unsigned int dly)
 00000000  ---- Variable 'dly' assigned to Register 'R0' ----
    2: {
 00000000            ; SCOPE-START
   11: for(b=0;b<dly;b++)
 00000000  2100      MOV         R1,#0x0
 00000002  ---- Variable 'b' assigned to Register 'R1' ----
 00000002  E005      B           L_3  ; T=0x00000010
   14: for(a=0;a<10;a++)   //in this loop there are 6 instructions getting
 00000004          L_10:
 00000004  2200      MOV         R2,#0x0
 00000006  ---- Variable 'a' assigned to Register 'R2' ----
   17: }     // 10*6*(1/( 60*10^6) )
 00000006          L_6:
 00000006  3201      ADD         R2,#0x1
 00000008  1C13      MOV         R3,R2 ; a
 0000000A  2B0A      CMP         R3,#0xA ; a
 0000000C  DBFB      BLT         L_6  ; T=0x00000006
   20: }
 0000000E  3101      ADD         R1,#0x1
 00000010          L_3:
 00000010  1C0A      MOV         R2,R1 ; b
 00000012  1C03      MOV         R3,R0 ; dly
 00000014  429A      CMP         R2,R3 ; b
 00000016  D3F5      BCC         L_10  ; T=0x00000004
 00000018            ; SCOPE-END
   24: }
 00000018  4770      BX          R14
 0000001A          ENDP ; 'delay_us?T'


*** CODE SEGMENT '?PR?delay_ms?T?2S':
   26: void delay_ms(unsigned int dly)
 00000000  B410      PUSH        {R4}
 00000002  ---- Variable 'dly' assigned to Register 'R0' ----
   27: {
 00000002            ; SCOPE-START
   30: for(b=0;b<dly;b++)
 00000002  2100      MOV         R1,#0x0
 00000004  ---- Variable 'b' assigned to Register 'R1' ----
 00000004  E00B      B           L_13  ; T=0x0000001E
   32: for(c=0;c<1000;c++ )
 00000006          L_20:
 00000006  2200      MOV         R2,#0x0
 00000008  ---- Variable 'c' assigned to Register 'R2' ----
   35: for(a=0;a<10;a++)   //in this loop there are 6 instructions getting
 00000008          L_25:
 00000008  2300      MOV         R3,#0x0
 0000000A  ---- Variable 'a' assigned to Register 'R3' ----
   38: }     // 10*6*(1/( 60*10^6) )
 0000000A          L_21:
 0000000A  3301      ADD         R3,#0x1
 0000000C  1C1C      MOV         R4,R3 ; a
 0000000E  2C0A      CMP         R4,#0xA ; a
 00000010  DBFB      BLT         L_21  ; T=0x0000000A
   41: }
ARM COMPILER V2.53,  2S                                                                    12/01/15  13:47:46  PAGE 4   

 00000012  3201      ADD         R2,#0x1
 00000014  1C13      MOV         R3,R2 ; c
 00000016  4CFA      LDR         R4,=0x3E8
 00000018  42A3      CMP         R3,R4 ; c
 0000001A  DBF5      BLT         L_25  ; T=0x00000008
   42: }
 0000001C  3101      ADD         R1,#0x1
 0000001E          L_13:
 0000001E  1C0A      MOV         R2,R1 ; b
 00000020  1C03      MOV         R3,R0 ; dly
 00000022  429A      CMP         R2,R3 ; b
 00000024  D3EF      BCC         L_20  ; T=0x00000006
 00000026            ; SCOPE-END
 00000026  BC10      POP         {R4}
 00000028  4770      BX          R14
 0000002A          ENDP ; 'delay_ms?T'


*** CODE SEGMENT '?PR?main?2S':
    3:   void main()
 00000000  B500      PUSH        {LR}
    4:   {
 00000002            ; SCOPE-START
    6:     IODIR0=0XFFFFFFFC;
 00000002  4800      LDR         R1,=0xFFFFFFFC
 00000004  4800      LDR         R0,=0xE0028008
 00000006  6001      STR         R1,[R0,#0x0]
    7:     IODIR1=0XFFFFFFFF;
 00000008  4800      LDR         R1,=0xFFFFFFFF
 0000000A  4800      LDR         R0,=0xE0028018
 0000000C  6001      STR         R1,[R0,#0x0]
    9:     while(1)
 0000000E          L_28:
   12:         a=IOPIN0&0X00000003;
 0000000E  4800      LDR         R0,=0xE0028000
 00000010  6804      LDR         R4,[R0,#0x0]
 00000012  2003      MOV         R0,#0x3
 00000014  4004      AND         R4,R0
 00000016  ---- Variable 'a' assigned to Register 'R4' ----
   13:         while(a==0X00000001)
 00000016  E013      B           L_30  ; T=0x00000040
 00000018          L_32:
   16:            I=0X00010000;
 00000018  4800      LDR         R6,=0x10000
 0000001A  ---- Variable 'I' assigned to Register 'R6' ----
   17:         for(j=0;j<=15;j++)
 0000001A  2500      MOV         R5,#0x0
 0000001C  ---- Variable 'j' assigned to Register 'R5' ----
 0000001C          L_37:
   20:                 IOSET1=I;
 0000001C  1C31      MOV         R1,R6 ; I
 0000001E  4800      LDR         R0,=0xE0028014
 00000020  6001      STR         R1,[R0,#0x0]
   21:             delay_ms(50);
 00000022  2032      MOV         R0,#0x32
 00000024  F7FF      BL          delay_ms?T  ; T=0x0001  (1)
 00000026  FFEC      BL          delay_ms?T  ; T=0x0001  (2)
   22:                 IOCLR1=I;
 00000028  1C31      MOV         R1,R6 ; I
 0000002A  4800      LDR         R0,=0xE002801C
 0000002C  6001      STR         R1,[R0,#0x0]
   23:                 I=I<<1;
 0000002E  0076      LSL         R6,R6,#0x1 ; I
   24:              }
 00000030  3501      ADD         R5,#0x1
 00000032  1C28      MOV         R0,R5 ; j
 00000034  280F      CMP         R0,#0xF ; j
 00000036  D9F1      BLS         L_37  ; T=0x0000001C
ARM COMPILER V2.53,  2S                                                                    12/01/15  13:47:46  PAGE 5   

   26:             a=IOPIN0&0X00000003;    
 00000038  4800      LDR         R0,=0xE0028000
 0000003A  6804      LDR         R4,[R0,#0x0]
 0000003C  2003      MOV         R0,#0x3
 0000003E  4004      AND         R4,R0
   27:         }
 00000040          L_30:
 00000040  1C20      MOV         R0,R4 ; a
 00000042  2801      CMP         R0,#0x1 ; a
 00000044  D0E8      BEQ         L_32  ; T=0x00000018
   28:         a=IOPIN0&0X00000003;
 00000046  4800      LDR         R0,=0xE0028000
 00000048  6804      LDR         R4,[R0,#0x0]
 0000004A  2003      MOV         R0,#0x3
 0000004C  4004      AND         R4,R0
   29:         while(0X00000002==a)
 0000004E  E013      B           L_39  ; T=0x00000078
 00000050          L_41:
   31:           I=0X80000000;
 00000050  4800      LDR         R6,=0x80000000
   32:         for(j=0;j<=15;j++)
 00000052  2500      MOV         R5,#0x0
 00000054          L_46:
   35:                 IOSET1=I;
 00000054  1C31      MOV         R1,R6 ; I
 00000056  4800      LDR         R0,=0xE0028014
 00000058  6001      STR         R1,[R0,#0x0]
   36:                 delay_ms(50);
 0000005A  2032      MOV         R0,#0x32
 0000005C  F7FF      BL          delay_ms?T  ; T=0x0001  (1)
 0000005E  FFD0      BL          delay_ms?T  ; T=0x0001  (2)
   37:                 IOCLR1=I;
 00000060  1C31      MOV         R1,R6 ; I
 00000062  4800      LDR         R0,=0xE002801C
 00000064  6001      STR         R1,[R0,#0x0]
   38:                 I=I>>1;
 00000066  0876      LSR         R6,R6,#0x1 ; I
   39:              }
 00000068  3501      ADD         R5,#0x1
 0000006A  1C28      MOV         R0,R5 ; j
 0000006C  280F      CMP         R0,#0xF ; j
 0000006E  D9F1      BLS         L_46  ; T=0x00000054
   41:                 a=IOPIN0&0X00000003;
 00000070  4800      LDR         R0,=0xE0028000
 00000072  6804      LDR         R4,[R0,#0x0]
 00000074  2003      MOV         R0,#0x3
 00000076  4004      AND         R4,R0
   43:         }
 00000078          L_39:
 00000078  1C20      MOV         R0,R4 ; a
 0000007A  2802      CMP         R0,#0x2 ; a
 0000007C  D0E8      BEQ         L_41  ; T=0x00000050
   44:         a=IOPIN0&0X00000003;
 0000007E  4800      LDR         R0,=0xE0028000
 00000080  6804      LDR         R4,[R0,#0x0]
 00000082  2003      MOV         R0,#0x3
 00000084  4004      AND         R4,R0
   45:         while(0X00000003==a)
 00000086  E00F      B           L_48  ; T=0x000000A8
 00000088          L_50:
   49:                 IOSET1=0xFFFFFFFF;
 00000088  4800      LDR         R1,=0xFFFFFFFF
 0000008A  4800      LDR         R0,=0xE0028014
 0000008C  6001      STR         R1,[R0,#0x0]
   50:                 delay_ms(50);
 0000008E  2032      MOV         R0,#0x32
ARM COMPILER V2.53,  2S                                                                    12/01/15  13:47:46  PAGE 6   

 00000090  F7FF      BL          delay_ms?T  ; T=0x0001  (1)
 00000092  FFB6      BL          delay_ms?T  ; T=0x0001  (2)
   51:                 IOCLR1=0xFFFFFFFF;
 00000094  4800      LDR         R1,=0xFFFFFFFF
 00000096  4800      LDR         R0,=0xE002801C
 00000098  6001      STR         R1,[R0,#0x0]
   52:                 delay_ms(50);
 0000009A  2032      MOV         R0,#0x32
 0000009C  F7FF      BL          delay_ms?T  ; T=0x0001  (1)
 0000009E  FFB0      BL          delay_ms?T  ; T=0x0001  (2)
   54:                a=IOPIN0&0X00000003;
 000000A0  4800      LDR         R0,=0xE0028000
 000000A2  6804      LDR         R4,[R0,#0x0]
 000000A4  2003      MOV         R0,#0x3
 000000A6  4004      AND         R4,R0
   57:         }
 000000A8          L_48:
 000000A8  1C20      MOV         R0,R4 ; a
 000000AA  2803      CMP         R0,#0x3 ; a
 000000AC  D0EC      BEQ         L_50  ; T=0x00000088
   58:         a=IOPIN0&0X00000003;
 000000AE  4800      LDR         R0,=0xE0028000
 000000B0  6804      LDR         R4,[R0,#0x0]
 000000B2  2003      MOV         R0,#0x3
 000000B4  4004      AND         R4,R0
   59:             while(0X00000000==a)
 000000B6  E006      B           L_52  ; T=0x000000C6
 000000B8          L_54:
   63:                 IOCLR1=0xFFFFFFFF;
 000000B8  4800      LDR         R1,=0xFFFFFFFF
 000000BA  4800      LDR         R0,=0xE002801C
 000000BC  6001      STR         R1,[R0,#0x0]
   65:                 a=IOPIN0&0X00000003;    
 000000BE  4800      LDR         R0,=0xE0028000
 000000C0  6804      LDR         R4,[R0,#0x0]
 000000C2  2003      MOV         R0,#0x3
 000000C4  4004      AND         R4,R0
   69:         }
 000000C6          L_52:
 000000C6  1C20      MOV         R0,R4 ; a
 000000C8  2800      CMP         R0,#0x0 ; a
 000000CA  D0F5      BEQ         L_54  ; T=0x000000B8
   73:     }
 000000CC  E79F      B           L_28  ; T=0x0000000E
 000000CE            ; SCOPE-END
 000000CE  BC08      POP         {R3}
 000000D0  4718      BX          R3
 000000D2          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =    ------
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
