ARM COMPILER V2.53,  armxor                                                                12/03/15  13:32:12  PAGE 1   


ARM COMPILER V2.53, COMPILATION OF MODULE armxor
OBJECT MODULE PLACED IN armxor.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe armxor.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include<LPC214X.h>
    2          void main()
    3          {
    4   1      unsigned int long o,a=0X00000004;
    5   1      int i;
    6   1      IODIR0=0XFFFFFFFC;
    7   1      while(1)
    8   1      {
    9   2      o=(IOPIN0&(0x00000003));
   10   2       switch(o)
   11   2         {
   12   3          case 0:{IOCLR0=0XFFFFFFFF;break;}
   13   3          case 1:{IOCLR0=0XFFFFFFFF;a=a<<1;if(a==0X80000000) a=0x00000004;IOSET0=a;for(i=0;i<10000;i++);break;}
   14   3          case 2:{IOCLR0=0XFFFFFFFF;a=a>>1;if(a==0X00000004) a=0x80000000;IOSET0=a;for(i=0;i<10000;i++);break;}
   15   3          case 3:{IOSET0=0XFFFFFFFC;break;}
   16   3          //default:{o&=0;break;}
   17   3      }
   18   2      }
   19   1      
   20   1      }
ARM COMPILER V2.53,  armxor                                                                12/03/15  13:32:12  PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         main



*** CODE SEGMENT '?PR?main?armxor':
    2: void main()
 00000000  B500      PUSH        {LR}
 00000002  ---- Variable 'i' assigned to Register 'R0' ----
    3: {
 00000002            ; SCOPE-START
    4: unsigned int long o,a=0X00000004;
 00000002  2104      MOV         R1,#0x4
 00000004  ---- Variable 'a' assigned to Register 'R1' ----
    6: IODIR0=0XFFFFFFFC;
 00000004  4800      LDR         R3,=0xFFFFFFFC
 00000006  4800      LDR         R2,=0xE0028008
 00000008  6013      STR         R3,[R2,#0x0]
    7: while(1)
 0000000A          L_3:
    9: o=(IOPIN0&(0x00000003));
 0000000A  4800      LDR         R2,=0xE0028000
 0000000C  6813      LDR         R3,[R2,#0x0]
 0000000E  2203      MOV         R2,#0x3
 00000010  4013      AND         R3,R2
 00000012  ---- Variable 'o' assigned to Register 'R3' ----
   10:  switch(o)
 00000012  1C1A      MOV         R2,R3 ; o
 00000014  2A01      CMP         R2,#0x1 ; o
 00000016  D009      BEQ         L_7  ; T=0x0000002C
 00000018  2A02      CMP         R2,#0x2 ; o
 0000001A  D01A      BEQ         L_8  ; T=0x00000052
 0000001C  2A03      CMP         R2,#0x3 ; o
 0000001E  D02A      BEQ         L_9  ; T=0x00000076
 00000020  2A00      CMP         R2,#0x0 ; o
 00000022  D1F2      BNE         L_3  ; T=0x0000000A
   12:     case 0:{IOCLR0=0XFFFFFFFF;break;}
 00000024          L_6:
 00000024  4800      LDR         R3,=0xFFFFFFFF
 00000026  4800      LDR         R2,=0xE002800C
 00000028  6013      STR         R3,[R2,#0x0]
 0000002A  E7EE      B           L_3  ; T=0x0000000A
   13:     case 1:{IOCLR0=0XFFFFFFFF;a=a<<1;if(a==0X80000000) a=0x00000004;IOSET0=a;for(i=0;i<10000;i++);break;}
 0000002C          L_7:
 0000002C  4800      LDR         R3,=0xFFFFFFFF
 0000002E  4800      LDR         R2,=0xE002800C
 00000030  6013      STR         R3,[R2,#0x0]
 00000032  0049      LSL         R1,R1,#0x1 ; a
 00000034  1C0A      MOV         R2,R1 ; a
 00000036  4800      LDR         R3,=0x80000000
 00000038  42DA      CMN         R2,R3 ; a
 0000003A  D100      BNE         L_10  ; T=0x0000003E
 0000003C  2104      MOV         R1,#0x4
 0000003E          L_10:
 0000003E  1C0A      MOV         R2,R1 ; a
 00000040  4800      LDR         R0,=0xE0028004
 00000042  6002      STR         R2,[R0,#0x0]
 00000044  2000      MOV         R0,#0x0
 00000046          L_11:
 00000046  3001      ADD         R0,#0x1
 00000048  1C02      MOV         R2,R0 ; i
 0000004A  4800      LDR         R3,=0x2710
ARM COMPILER V2.53,  armxor                                                                12/03/15  13:32:12  PAGE 3   

 0000004C  429A      CMP         R2,R3 ; i
 0000004E  DBFA      BLT         L_11  ; T=0x00000046
 00000050  E7DB      B           L_3  ; T=0x0000000A
   14:     case 2:{IOCLR0=0XFFFFFFFF;a=a>>1;if(a==0X00000004) a=0x80000000;IOSET0=a;for(i=0;i<10000;i++);break;}
 00000052          L_8:
 00000052  4800      LDR         R3,=0xFFFFFFFF
 00000054  4800      LDR         R2,=0xE002800C
 00000056  6013      STR         R3,[R2,#0x0]
 00000058  0849      LSR         R1,R1,#0x1 ; a
 0000005A  1C0A      MOV         R2,R1 ; a
 0000005C  2A04      CMP         R2,#0x4 ; a
 0000005E  D100      BNE         L_16  ; T=0x00000062
 00000060  4800      LDR         R1,=0x80000000
 00000062          L_16:
 00000062  1C0A      MOV         R2,R1 ; a
 00000064  4800      LDR         R0,=0xE0028004
 00000066  6002      STR         R2,[R0,#0x0]
 00000068  2000      MOV         R0,#0x0
 0000006A          L_17:
 0000006A  3001      ADD         R0,#0x1
 0000006C  1C02      MOV         R2,R0 ; i
 0000006E  4800      LDR         R3,=0x2710
 00000070  429A      CMP         R2,R3 ; i
 00000072  DBFA      BLT         L_17  ; T=0x0000006A
 00000074  E7C9      B           L_3  ; T=0x0000000A
   15:     case 3:{IOSET0=0XFFFFFFFC;break;}
 00000076          L_9:
 00000076  4800      LDR         R3,=0xFFFFFFFC
 00000078  4800      LDR         R2,=0xE0028004
 0000007A  6013      STR         R3,[R2,#0x0]
 0000007C  E7C5      B           L_3  ; T=0x0000000A
   18: }
 0000007E            ; SCOPE-END
 0000007E  BC08      POP         {R3}
 00000080  4718      BX          R3
 00000082          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =    ------
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
