ARM COMPILER V2.53,  adc                                                                   14/01/15  10:27:06  PAGE 1   


ARM COMPILER V2.53, COMPILATION OF MODULE adc
OBJECT MODULE PLACED IN adc.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe adc.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include <LPC214X.H>
    2          void adc_init();
    3          void adc_read();
    4           void main()
    5           {
    6   1         adc_init();
    7   1         while(1)
    8   1         adc_read();
    9   1      
   10   1       } 
   11          
   12          
   13          void adc_init()
   14          {
   15   1      PINSEL1=0x01000000;
   16   1      IO1DIR=0xFFFF0000;
   17   1      AD0CR=0x01200A02;
   18   1      }
   19          void adc_read()
   20          {
   21   1          unsigned int a;
   22   1          AD0CR=0x01200A02;
   23   1          do
   24   1          {
   25   2          a=AD0GDR;
   26   2          a=a&0X80000000;
   27   2          }
   28   1          while(a==0x00);
   29   1          a=AD0GDR;
   30   1          a=a<<0x10;
   31   1          IO1CLR=0xffff0000;
   32   1          IO1SET=a;
   33   1      
   34   1      }
ARM COMPILER V2.53,  adc                                                                   14/01/15  10:27:06  PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         adc_init?T
 PUBLIC         adc_read?T
 PUBLIC         main



*** CODE SEGMENT '?PR?main?adc':
    4:  void main()
 00000000  B500      PUSH        {LR}
    6:    adc_init();
 00000002  F7FF      BL          adc_init?T  ; T=0x0001  (1)
 00000004  FFFD      BL          adc_init?T  ; T=0x0001  (2)
    7:    while(1)
 00000006          L_3:
 00000006  F7FF      BL          adc_read?T  ; T=0x0001  (1)
 00000008  FFFB      BL          adc_read?T  ; T=0x0001  (2)
 0000000A  E7FC      B           L_3  ; T=0x00000006
   10:  } 
 0000000C  BC08      POP         {R3}
 0000000E  4718      BX          R3
 00000010          ENDP ; 'main'


*** CODE SEGMENT '?PR?adc_init?T?adc':
   15: PINSEL1=0x01000000;
 00000000  4800      LDR         R1,=0x1000000
 00000002  4800      LDR         R0,=0xE002C004
 00000004  6001      STR         R1,[R0,#0x0]
   16: IO1DIR=0xFFFF0000;
 00000006  4800      LDR         R1,=0xFFFF0000
 00000008  4800      LDR         R0,=0xE0028018
 0000000A  6001      STR         R1,[R0,#0x0]
   17: AD0CR=0x01200A02;
 0000000C  4800      LDR         R1,=0x1200A02
 0000000E  4800      LDR         R0,=0xE0034000
 00000010  6001      STR         R1,[R0,#0x0]
   18: }
 00000012  4770      BX          R14
 00000014          ENDP ; 'adc_init?T'


*** CODE SEGMENT '?PR?adc_read?T?adc':
   20: {
 00000000            ; SCOPE-START
   22:     AD0CR=0x01200A02;
 00000000  4800      LDR         R1,=0x1200A02
 00000002  4800      LDR         R0,=0xE0034000
 00000004  6001      STR         R1,[R0,#0x0]
   23:     do
 00000006          L_5:
   25:     a=AD0GDR;
 00000006  4800      LDR         R0,=0xE0034004
 00000008  6800      LDR         R0,[R0,#0x0]
 0000000A  ---- Variable 'a' assigned to Register 'R0' ----
   26:     a=a&0X80000000;
 0000000A  4800      LDR         R1,=0x80000000
 0000000C  4008      AND         R0,R1
   27:     }
 0000000E  1C01      MOV         R1,R0 ; a
 00000010  2900      CMP         R1,#0x0 ; a
 00000012  D0F8      BEQ         L_5  ; T=0x00000006
   29:     a=AD0GDR;
 00000014  4800      LDR         R0,=0xE0034004
 00000016  6800      LDR         R0,[R0,#0x0]
   30:     a=a<<0x10;
ARM COMPILER V2.53,  adc                                                                   14/01/15  10:27:06  PAGE 3   

 00000018  0400      LSL         R0,R0,#0x10 ; a
   31:     IO1CLR=0xffff0000;
 0000001A  4800      LDR         R2,=0xFFFF0000
 0000001C  4800      LDR         R1,=0xE002801C
 0000001E  600A      STR         R2,[R1,#0x0]
   32:     IO1SET=a;
 00000020  1C01      MOV         R1,R0 ; a
 00000022  4800      LDR         R0,=0xE0028014
 00000024  6001      STR         R1,[R0,#0x0]
 00000026            ; SCOPE-END
 00000026  4770      BX          R14
 00000028          ENDP ; 'adc_read?T'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =    ------
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
